generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?         @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  icon_img       String?
  total_karma    Int?
  link_karma     Int?
  comment_karma  Int?
  is_employee    Boolean?
  verified       Boolean?
  scratchResults ScratchResult[]
  referrals      Referral[]      @relation("ReferrerToReferral")
  referredBy     Referral[]      @relation("ReferredToReferral")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ScratchResult {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  scratchTime DateTime
  won         Boolean
  createdAt   DateTime @default(now())
}

model Referral {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  referrer   User     @relation("ReferrerToReferral", fields: [referrerId], references: [id])
  referrerId String   @db.ObjectId
  referred   User     @relation("ReferredToReferral", fields: [referredId], references: [id])
  referredId String   @db.ObjectId
  createdAt  DateTime @default(now())

  @@index([referrerId])
  @@index([referredId])
}
